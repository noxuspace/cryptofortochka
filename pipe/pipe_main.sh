#!/bin/bash

# –¶–≤–µ—Ç–∞ —Ç–µ–∫—Å—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m'  # –°–±—Ä–æ—Å —Ü–≤–µ—Ç–∞

set -euo pipefail

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è curl –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞, –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
if ! command -v curl &> /dev/null; then
    sudo apt update
    sudo apt install curl -y
fi
sleep 1

# –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ª–æ–≥–æ—Ç–∏–ø
curl -s https://raw.githubusercontent.com/noxuspace/cryptofortochka/main/logo_club.sh | bash

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Ubuntu
echo -e "${BLUE}–ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é –≤–∞—à–µ–π OS...${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è bc –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
if ! command -v bc &> /dev/null; then
    echo -e "${BLUE}–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º bc...${NC}"
    sudo apt update && sudo apt install -y bc
fi
sleep 1

# lsb_release –º–æ–∂–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –Ω–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö –æ–±—Ä–∞–∑–∞—Ö
if command -v lsb_release &>/dev/null; then
  UBUNTU_VERSION=$(lsb_release -rs)
else
  UBUNTU_VERSION=$(grep -oP '(?<=^VERSION_ID=)".*"' /etc/os-release | tr -d '"')
fi
REQUIRED_VERSION=24.04

if (( $(echo "$UBUNTU_VERSION < $REQUIRED_VERSION" | bc -l) )); then
  echo -e "${RED}–î–ª—è —ç—Ç–æ–π –Ω–æ–¥—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è Ubuntu ${REQUIRED_VERSION} –∏–ª–∏ –≤—ã—à–µ!${NC}"
  echo -e "${PURPLE}–£ –≤–∞—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤–µ—Ä—Å–∏—è: ${UBUNTU_VERSION}${NC}"
  exit 1
else
  echo -e "${GREEN}–í–µ—Ä—Å–∏—è Ubuntu –ø–æ–¥—Ö–æ–¥–∏—Ç: ${UBUNTU_VERSION}${NC}"
fi

# –ú–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π
echo -e "${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${NC}"
echo -e "${CYAN}1) –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–¥—ã${NC}"
echo -e "${CYAN}2) –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–¥—ã${NC}"
echo -e "${CYAN}3) –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤${NC}"
echo -e "${CYAN}4) –†–µ—Å—Ç–∞—Ä—Ç –Ω–æ–¥—ã${NC}"
echo -e "${CYAN}5) –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –Ω–æ–¥—ã${NC}"
echo -e "${CYAN}6) –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–æ–¥–µ${NC}"
echo -e "${CYAN}7) –£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–¥—ã${NC}"

echo -e "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä:${NC} "
read choice

case $choice in
  1)
    echo -e "${BLUE}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–¥—ã Pipe (Mainnet)...${NC}"
    export DEBIAN_FRONTEND=noninteractive
    sudo apt-get update
    sudo apt-get install -y ca-certificates libssl-dev jq iptables-persistent psmisc
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    CURRENT_USER=${SUDO_USER:-$USER}
    sudo mkdir -p /opt/pipe/.cache
    sudo chown -R "$CURRENT_USER":"$CURRENT_USER" /opt/pipe
    cd /opt/pipe

    curl -fsSL https://pipe.network/p1-cdn/releases/latest/download/pop -o pop
    chmod +x pop
    
    # ‚îÄ‚îÄ –ó–∞–ø—Ä–æ—Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    echo -e "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –æ—Ç –∫–æ—à–µ–ª—å–∫–∞ Solana:${NC}"
    read -r SOLANA_PUBKEY
    
    echo -e "${YELLOW}–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –∏–º—è –¥–ª—è –Ω–æ–¥—ã:${NC}"
    read -r POP_NODE
    
    echo -e "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email:${NC}"
    read -r EMAIL
    
    # RAM –≤ –ú–ë (—Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ)
    while true; do
      echo -e "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –æ–±—ä—ë–º –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏ (—Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ –≤ Mb, –Ω–∞–ø—Ä–∏–º–µ—Ä, 512 –∏–ª–∏ 1024 –∏ —Ç.–ø.):${NC}"
      read -r RAM_MB
      [[ "$RAM_MB" =~ ^[0-9]+$ ]] && break
      echo -e "${RED}–í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ (–ú–ë)!${NC}"
    done
    
    # –î–∏—Å–∫–æ–≤—ã–π –∫–µ—à –≤ –ì–ë (—Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ)
    while true; do
      echo -e "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∫–µ—à–∞ –Ω–∞ –¥–∏—Å–∫–µ (–≤ Gb, –Ω–∞–ø—Ä–∏–º–µ—Ä, 100 –∏–ª–∏ 250):${NC}"
      read -r DISK_GB
      [[ "$DISK_GB" =~ ^[0-9]+$ ]] && break
      echo -e "${RED}–í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ (–ì–ë).${NC}"
    done
    
    # ‚îÄ‚îÄ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏ –ø–æ IP ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    response=$(curl -s http://ip-api.com/json || true)
    country=$(echo "$response" | jq -r '.country // empty')
    city=$(echo "$response" | jq -r '.city // empty')
    
    if [[ -n "$city" && -n "$country" ]]; then
      POP_LOCATION="$city, $country"
    else
      POP_LOCATION="Unknown"
    fi

    # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∫–∞–≤—ã—á–∫–∏ –≤ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏—è—Ö –¥–ª—è .env
    ESC_EMAIL=$(printf '%s' "$EMAIL" | sed 's/"/\\"/g')
    ESC_LOCATION=$(printf '%s' "$POP_LOCATION" | sed 's/"/\\"/g')
    
    sudo tee /opt/pipe/.env > /dev/null <<EOF
# Wallet for earnings
NODE_SOLANA_PUBLIC_KEY=${SOLANA_PUBKEY}

# Node identity
NODE_NAME=${POP_NODE}
NODE_EMAIL="${ESC_EMAIL}"
NODE_LOCATION="${ESC_LOCATION}"

# Cache configuration
MEMORY_CACHE_SIZE_MB=${RAM_MB}
DISK_CACHE_SIZE_GB=${DISK_GB}
DISK_CACHE_PATH=.cache

# Network ports
HTTP_PORT=80
HTTPS_PORT=443

# Home network auto port forwarding (disable on VPS/servers)
UPNP_ENABLED=false
EOF

    sudo tee /etc/systemd/system/pipe.service > /dev/null <<'EOF'
[Unit]
Description=Pipe Network POP Node
After=network-online.target
Wants=network-online.target

[Service]
WorkingDirectory=/opt/pipe
EnvironmentFile=/opt/pipe/.env
ExecStart=/opt/pipe/pop
Restart=always
RestartSec=5
StandardOutput=journal
StandardError=journal
LimitNOFILE=65535

[Install]
WantedBy=multi-user.target
EOF


    # –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤ 80 –∏ 443, –µ—Å–ª–∏ –æ–Ω–∏ –∑–∞–Ω—è—Ç—ã
    for PORT in 80 443; do
      if sudo ss -tulpen | awk '{print $5}' | grep -q ":$PORT\$"; then
        echo -e "${BLUE}üîí –ü–æ—Ä—Ç $PORT –∑–∞–Ω—è—Ç. –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å...${NC}"
        sudo fuser -k ${PORT}/tcp
        sleep 2  # –î–∞—Ç—å —è–¥—Ä—É –≤—Ä–µ–º—è –æ—Ç–ø—É—Å—Ç–∏—Ç—å —Å–æ–∫–µ—Ç
        echo -e "${GREEN}‚úÖ –ü–æ—Ä—Ç $PORT –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Å–≤–æ–±–æ–∂–¥—ë–Ω.${NC}"
      else
        echo -e "${GREEN}‚úÖ –ü–æ—Ä—Ç $PORT —É–∂–µ —Å–≤–æ–±–æ–¥–µ–Ω.${NC}"
      fi
    done

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ unit-—Ñ–∞–π–ª apache2.service –µ—Å—Ç—å –≤ —Å–∏—Å—Ç–µ–º–µ
    if systemctl list-unit-files --type=service | grep -q '^apache2\.service'; then
    
      # –ï—Å–ª–∏ apache2 —Å–µ–π—á–∞—Å –∞–∫—Ç–∏–≤–µ–Ω (–∑–∞–ø—É—â–µ–Ω) ‚Äî –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –µ–≥–æ
      if systemctl is-active --quiet apache2; then
        sudo systemctl stop apache2
      fi
    
      # –ï—Å–ª–∏ apache2 –≤–∫–ª—é—á—ë–Ω –Ω–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ ‚Äî –æ—Ç–∫–ª—é—á–∞–µ–º –µ–≥–æ
      if systemctl is-enabled --quiet apache2; then
        sudo systemctl disable apache2
      fi
    
    fi
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ iptables
    sudo iptables  -I INPUT -p tcp --dport 80  -j ACCEPT
    sudo iptables  -I INPUT -p tcp --dport 443 -j ACCEPT
    sudo ip6tables -I INPUT -p tcp --dport 80  -j ACCEPT || true
    sudo ip6tables -I INPUT -p tcp --dport 443 -j ACCEPT || true
    
    sudo sh -c "iptables-save  > /etc/iptables/rules.v4"
    sudo sh -c "ip6tables-save > /etc/iptables/rules.v6" || true

    sudo systemctl daemon-reload
    sudo systemctl enable pipe
    sudo systemctl start pipe
    cd $HOME
    
    # –ó–∞–≤–µ—Ä—à–∞—é—â–∏–π –≤—ã–≤–æ–¥
    echo -e "${PURPLE}-----------------------------------------------------------------------${NC}"
    echo -e "${YELLOW}–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–æ–≤:${NC}" 
    echo "sudo journalctl -u pipe -f"
    echo -e "${PURPLE}-----------------------------------------------------------------------${NC}"
    echo -e "${GREEN}CRYPTO FORTOCHKA ‚Äî –≤—Å—è –∫—Ä–∏–ø—Ç–∞ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ!${NC}"
    echo -e "${CYAN}–ù–∞—à Telegram https://t.me/cryptoforto${NC}"
    sleep 2
    sudo journalctl -u pipe -f
    ;;
  2)
    echo -e "${GREEN}–£ –≤–∞—Å –∞–∫—Ç—É–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –Ω–æ–¥—ã!${NC}"
    ;;
  3)
    sudo journalctl -u pipe -f
    ;;
  4)
    sudo systemctl restart pipe && sudo journalctl -u pipe -f
    ;;
  5)
    curl -sf http://127.0.0.1:8081/health || echo -e "${RED}–°–µ—Ä–≤–∏—Å –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ /health${NC}"
    ;;
  6)
    cd /opt/pipe
    ./pop status
    ./pop earnings
    cd $HOME
    ;;
  7)
    sudo systemctl stop pipe
    sudo systemctl disable pipe
    sudo rm /etc/systemd/system/pipe.service
    sudo systemctl daemon-reload
    sudo rm -rf /opt/pipe
    ;;
  *)
    echo -e "${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä${NC}"
    ;;
esac
