#!/bin/bash

# –¶–≤–µ—Ç–∞ —Ç–µ–∫—Å—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m'  # –°–±—Ä–æ—Å —Ü–≤–µ—Ç–∞

set -euo pipefail

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è curl –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞, –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
if ! command -v curl &> /dev/null; then
    sudo apt update
    sudo apt install curl -y
fi
sleep 1

# –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ª–æ–≥–æ—Ç–∏–ø
curl -s https://raw.githubusercontent.com/noxuspace/cryptofortochka/main/logo_club.sh | bash

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è bc –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞, –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
echo -e "${BLUE}–ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é –≤–∞—à–µ–π OS...${NC}"
if ! command -v bc &> /dev/null; then
    sudo apt update
    sudo apt install bc -y
fi
sleep 1

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Ubuntu
UBUNTU_VERSION=$(lsb_release -rs)
REQUIRED_VERSION=24.04

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ª–∏ —É—Ç–∏–ª–∏—Ç–∞ bc
if ! command -v bc &> /dev/null; then
    echo -e "${BLUE}–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º bc...${NC}"
    sudo apt update && sudo apt install -y bc
fi

# –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–π
if (( $(echo "$UBUNTU_VERSION < $REQUIRED_VERSION" | bc -l) )); then
    echo -e "${RED}–î–ª—è —ç—Ç–æ–π –Ω–æ–¥—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è Ubuntu ${REQUIRED_VERSION} –∏–ª–∏ –≤—ã—à–µ!${NC}"
    echo -e "${PURPLE}–£ –≤–∞—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤–µ—Ä—Å–∏—è: ${UBUNTU_VERSION}${NC}"
    exit 1
else
    echo -e "${GREEN}–í–µ—Ä—Å–∏—è Ubuntu –ø–æ–¥—Ö–æ–¥–∏—Ç: ${UBUNTU_VERSION}${NC}"
fi


# –ú–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π
echo -e "${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${NC}"
echo -e "${CYAN}1) –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–¥—ã${NC}"
echo -e "${CYAN}2) –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–¥—ã${NC}"
echo -e "${CYAN}3) –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤${NC}"
echo -e "${CYAN}4) –†–µ—Å—Ç–∞—Ä—Ç –Ω–æ–¥—ã${NC}"
echo -e "${CYAN}5) –£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–¥—ã${NC}"

echo -e "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä:${NC} "
read choice

case $choice in
  1)
    echo -e "${BLUE}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–¥—ã Pipe (Testnet)...${NC}"
    sudo apt-get update
    sudo apt install -y libssl-dev ca-certificates jq

    sudo apt update
    sudo apt install -y iptables-persistent
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    cd /opt
    mkdir pipe && cd pipe

    curl -L https://pipe.network/p1-cdn/releases/latest/download/pop -o pop
    chmod +x pop

    # –ó–∞–ø—Ä–æ—Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    echo -e "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –æ—Ç –∫–æ—à–µ–ª—å–∫–∞ Solana:${NC}"
    read SOLANA_PUBKEY
    
    echo -e "${YELLOW}–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –∏–º—è –¥–ª—è –Ω–æ–¥—ã:${NC}"
    read POP_NODE

    echo -e "${YELLOW}–í–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏–ª–∏ –Ω–∏–∫–Ω–µ–π–º:${NC}"
    read POP_NAME

    echo -e "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –≤–∞—à–µ–≥–æ —Å–∞–π—Ç–∞ –∏–ª–∏ Github –∏–ª–∏ Twiiter... :${NC}"
    read WEBSITE
    
    echo -e "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email:${NC}"
    read EMAIL
    
    echo -e "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –æ–±—ä—ë–º –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏ (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä–∞ –∏–ª–∏ —á–∏—Å–ª–æ –≤ GB, –Ω–∞–ø—Ä–∏–º–µ—Ä, 6 –∏–ª–∏ 8 –∏ —Ç.–ø.):${NC}"
    read RAM_GB
    
    echo -e "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∫–µ—à–∞ –Ω–∞ –¥–∏—Å–∫–µ (—Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ –≤ GB, –Ω–∞–ø—Ä–∏–º–µ—Ä, 250):${NC}"
    read DISK_GB

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å ip-api.com
    response=$(curl -s http://ip-api.com/json)
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—Ç—Ä–∞–Ω—É –∏ –≥–æ—Ä–æ–¥
    country=$(echo "$response" | jq -r '.country')
    city=$(echo "$response" | jq -r '.city')
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    POP_LOCATION="$city, $country"

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —è–¥—Ä–∞ —á–µ—Ä–µ–∑ sysctl
    sudo bash -c 'cat > /etc/sysctl.d/99-popcache.conf << EOL
net.ipv4.ip_local_port_range = 1024 65535
net.core.somaxconn = 65535
net.ipv4.tcp_low_latency = 1
net.ipv4.tcp_fastopen = 3
net.ipv4.tcp_slow_start_after_idle = 0
net.ipv4.tcp_window_scaling = 1
net.ipv4.tcp_wmem = 4096 65536 16777216
net.ipv4.tcp_rmem = 4096 87380 16777216
net.core.wmem_max = 16777216
net.core.rmem_max = 16777216
EOL'
    sudo sysctl -p /etc/sysctl.d/99-popcache.conf

    # –õ–∏–º–∏—Ç—ã –æ—Ç–∫—Ä—ã—Ç—ã—Ö —Ñ–∞–π–ª–æ–≤
    sudo bash -c 'cat > /etc/security/limits.d/popcache.conf << EOL
*    hard nofile 65535
*    soft nofile 65535
EOL'

    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –±–∏–Ω–∞—Ä—è
    ARCH=$(uname -m)
    if [[ "$ARCH" == "x86_64" ]]; then
      URL="https://download.pipe.network/static/pop-v0.3.0-linux-x64.tar.gz"
    else
      URL="https://download.pipe.network/static/pop-v0.3.0-linux-arm64.tar.gz"
    fi
    wget -q "$URL" -O pop.tar.gz
    tar -xzf pop.tar.gz && rm pop.tar.gz
    chmod +x pop
    chmod 755 /opt/popcache/pop

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è config.json
    MB=$(( RAM_GB * 1024 ))
    cat > config.json <<EOL
{
  "pop_name": "${POP_NODE}",
  "pop_location": "${POP_LOCATION}",
  "invite_code": "${INVITE}",
  "server": {"host": "0.0.0.0","port": 443,"http_port": 80,"workers": 0},
  "cache_config": {"memory_cache_size_mb": ${MB},"disk_cache_path": "./cache","disk_cache_size_gb": ${DISK_GB},"default_ttl_seconds": 86400,"respect_origin_headers": true,"max_cacheable_size_mb": 1024},
  "api_endpoints": {"base_url": "https://dataplane.pipenetwork.com"},
  "identity_config": {"node_name": "${POP_NODE}","name": "${POP_NAME}","email": "${EMAIL}","website": "${WEBSITE}","discord": "${DISCORD}","telegram": "${TELEGRAM}","solana_pubkey": "${SOLANA_PUBKEY}"}
}
EOL

    # –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤ 80 –∏ 443, –µ—Å–ª–∏ –æ–Ω–∏ –∑–∞–Ω—è—Ç—ã
    for PORT in 80 443; do
      if sudo ss -tulpen | awk '{print $5}' | grep -q ":$PORT\$"; then
        echo -e "${BLUE}üîí –ü–æ—Ä—Ç $PORT –∑–∞–Ω—è—Ç. –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å...${NC}"
        sudo fuser -k ${PORT}/tcp
        sleep 2  # –î–∞—Ç—å —è–¥—Ä—É –≤—Ä–µ–º—è –æ—Ç–ø—É—Å—Ç–∏—Ç—å —Å–æ–∫–µ—Ç
        echo -e "${GREEN}‚úÖ –ü–æ—Ä—Ç $PORT –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Å–≤–æ–±–æ–∂–¥—ë–Ω.${NC}"
      else
        echo -e "${GREEN}‚úÖ –ü–æ—Ä—Ç $PORT —É–∂–µ —Å–≤–æ–±–æ–¥–µ–Ω.${NC}"
      fi
    done

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ unit-—Ñ–∞–π–ª apache2.service –µ—Å—Ç—å –≤ —Å–∏—Å—Ç–µ–º–µ
    if systemctl list-unit-files --type=service | grep -q '^apache2\.service'; then
    
      # –ï—Å–ª–∏ apache2 —Å–µ–π—á–∞—Å –∞–∫—Ç–∏–≤–µ–Ω (–∑–∞–ø—É—â–µ–Ω) ‚Äî –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –µ–≥–æ
      if systemctl is-active --quiet apache2; then
        sudo systemctl stop apache2
      fi
    
      # –ï—Å–ª–∏ apache2 –≤–∫–ª—é—á—ë–Ω –Ω–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ ‚Äî –æ—Ç–∫–ª—é—á–∞–µ–º –µ–≥–æ
      if systemctl is-enabled --quiet apache2; then
        sudo systemctl disable apache2
      fi
    
    fi
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ iptables
    sudo iptables -I INPUT -p tcp --dport 443 -j ACCEPT
    sudo iptables -I INPUT -p tcp --dport 80 -j ACCEPT
    sudo sh -c "iptables-save > /etc/iptables/rules.v4"

    # Dockerfile
    cat > Dockerfile << EOL
FROM ubuntu:24.04

# Install dependensi dasar
RUN apt update && apt install -y \\
    ca-certificates \\
    curl \\
    libssl-dev \\
    && rm -rf /var/lib/apt/lists/*

# Buat direktori untuk pop
WORKDIR /opt/popcache

# Salin file konfigurasi & binary dari host
COPY pop .
COPY config.json .

# Berikan izin eksekusi
RUN chmod +x ./pop

# Jalankan node
CMD ["./pop", "--config", "config.json"]
EOL

    # –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    docker build -t popnode .
    cd ~

    docker run -d \
      --name popnode \
      -p 80:80 \
      -p 443:443 \
      --restart unless-stopped \
      popnode
    
    # –ó–∞–≤–µ—Ä—à–∞—é—â–∏–π –≤—ã–≤–æ–¥
    echo -e "${PURPLE}-----------------------------------------------------------------------${NC}"
    echo -e "${YELLOW}–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–æ–≤:${NC}" 
    echo "docker logs --tail 100 -f popnode"
    echo -e "${PURPLE}-----------------------------------------------------------------------${NC}"
    echo -e "${GREEN}CRYPTO FORTOCHKA ‚Äî –≤—Å—è –∫—Ä–∏–ø—Ç–∞ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ!${NC}"
    echo -e "${CYAN}–ù–∞—à Telegram https://t.me/cryptoforto${NC}"
    sleep 2
    docker logs --tail 100 -f popnode
    ;;
  2)
    echo -e "${RED}–í–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≥–∞–π–¥ –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä—É—á–Ω—É—é!${NC}"
    ;;
  3)
    docker logs --tail 100 -f popnode
    ;;
  4)
    docker restart popnode && docker logs --tail 100 -f popnode
    ;;
  5)
    docker stop popnode && docker rm popnode
    sudo rm -rf /opt/popcache

    docker rmi popnode:latest

    # –£–¥–∞–ª—è–µ–º sysctl-–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏ –ø—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    sudo rm -f /etc/sysctl.d/99-popcache.conf
    sudo sysctl --system

    # –£–¥–∞–ª—è–µ–º limits-–∫–æ–Ω—Ñ–∏–≥
    sudo rm -f /etc/security/limits.d/popcache.conf
    ;;
  *)
    echo -e "${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä${NC}"
    ;;
esac
